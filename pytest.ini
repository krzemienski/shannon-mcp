[pytest]
# pytest configuration for Shannon MCP

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --tb=short
    --disable-warnings
    -ra
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-fail-under=80

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    e2e: marks tests as end-to-end tests
    real_system: marks tests that use real system resources
    requires_claude: marks tests that require Claude binary
    stress: marks tests as stress/performance tests
    asyncio: marks async tests

# Coverage settings
[coverage:run]
source = shannon_mcp
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# Asyncio settings
asyncio_mode = auto

# Timeout settings
timeout = 300
timeout_method = thread

# Log settings
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture settings
capture = no

# Environment
env = 
    SHANNON_TEST_MODE = true